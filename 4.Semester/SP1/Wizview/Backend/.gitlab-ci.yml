image: condaforge/mambaforge:latest

variables:
  CONDA_ENV_NAME: "ds-review"
  ENVIRONMENT_FILE: "environment-dev.yml"
  CONDA_LOCK_FILE: "conda-lock.yml"

stages:
  - build
  - test
  - package


pack_environment:
  stage: build
  script:
    - echo "Creating and packing environment."
    - mamba install conda-pack conda-lock
    - conda-lock install -n $CONDA_ENV_NAME $CONDA_LOCK_FILE
    - conda-pack -n $CONDA_ENV_NAME -o env.tar
  artifacts:
    paths:
      - env.tar


# create container and push it to the gitlab registry
.container:
  stage: package
  script:
    - echo "Creating container"


.test_stage_setup_script: &test_stage_setup_script
  - mkdir env && tar xvf env.tar -C env && source env/bin/activate
  - cd app && chmod +x scripts/$SCRIPT_NAME

pytests:
  stage: test
  variables:
    SCRIPT_NAME: "run_tests.sh"
    COVERAGE_LIMIT_PERCENTAGE: "85"
  script:
    - *test_stage_setup_script
    - ./scripts/$SCRIPT_NAME -r -f $COVERAGE_LIMIT_PERCENTAGE
  artifacts:
    paths:
      - app/tests/coverage.xml
      - app/tests/coverage/

pylint:
  stage: test
  variables:
    SCRIPT_NAME: "pylint.sh"
    PYLINT_LIMIT_SCORE: "9.50"
  script:
    - *test_stage_setup_script
    - ./scripts/$SCRIPT_NAME -f $PYLINT_LIMIT_SCORE > pylint_report.txt
    - cat pylint_report.txt
  artifacts:
    paths:
      - app/pylint_report.txt


mypy:
  stage: test
  variables:
    SCRIPT_NAME: "mypy.sh"
  script:
    - *test_stage_setup_script
    - ./scripts/$SCRIPT_NAME -h -x
  artifacts:
    paths:
      - app/mypy_report_html/
      - app/mypy_report_xml/
